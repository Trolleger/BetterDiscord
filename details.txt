From now on you have to use Linux, if you are using windows use Ubuntu linux. (at least that's what we are doing) -Andrew


# Step into the container
docker exec -it postgres psql -U root -d chat_app
psql "host=localhost user=$POSTGRES_USER dbname=$POSTGRES_DB sslmode=require"

For most secure use this
psql "host=localhost port=5432 dbname=chat_app user=root sslmode=require sslrootcert=./postgres/dev_certs/server.crt"


IF YOU NEED TO RUN COMMANDS IN THE CONTAINER WHILE IT IS DOWN:
To reset shit:
docker compose run --rm backend mix ecto.reset 
To Get Deps:
docker compose run --rm backend mix deps.get



FOR NORMAL DOCKER-COMPOSE.yml On POWERSHELL
docker compose down; docker compose up -d

docker compose up -d --build --force-recreate backend
docker compose up -d --build --force-recreate --no-deps backend





# DROP DATABASE AND REMAKE. WARNING! WILL DROP ALL INFO!
docker exec -it backend mix ecto.drop; docker exec -it backend mix ecto.create; docker exec -it backend mix ecto.migrate





FOR DEV!
docker-compose -f docker-compose-dev.yml up -d --build

# Check CockroachDB logs
docker-compose -f docker-compose-dev.yml logs cockroachdb

# Check backend logs
docker-compose -f docker-compose-dev.yml logs backend

# Check coturn logs
docker-compose -f docker-compose-dev.yml logs coturn

# Check mediasoup logs
docker-compose -f docker-compose-dev.yml logs mediasoup-server

# Check minio logs
docker-compose -f docker-compose-dev.yml logs minio

# Check frontend logs
docker-compose -f docker-compose-dev.yml logs frontend

docker-compose -f docker-compose-dev.yml up mediasoup-server













docker-compose exec backend mix ecto.create
docker-compose exec backend mix ecto.migrate

IF THERE ARE ANY PHOENIX ERRORS RUN THE ABOVE

# Full clean restart
docker-compose down -v && docker-compose up -d

# Verify all services
docker-compose ps



SAI CAN U SEE THIS:



git log
