services:
  cockroachdb:
    container_name: cockroachdb
    image: cockroachdb/cockroach:v22.2.8
    volumes:
      - ./certs:/cockroach/certs:ro
      - cockroach-data:/cockroach/cockroach-data
    command: >
      start-single-node
      --certs-dir=/cockroach/certs
      --listen-addr=127.0.0.1:26257
      --advertise-addr=cockroachdb:26257
      --http-addr=127.0.0.1:8080
      --sql-addr=cockroachdb:26257
      --max-offset=2s
    ports:
      - "26257:26257"
      - "8080:8080"
    networks:
      betterdiscord:
        aliases:
          - cockroachdb
    healthcheck:
      test: ["CMD-SHELL", "curl -f https://127.0.0.1:8080/health?ready=1 --cacert /cockroach/certs/ca.crt || exit 1"]
      interval: 15s
      timeout: 45s
      retries: 20
      start_period: 30s
    restart: unless-stopped

  # Database initialization service
  db-init:
    container_name: db-init
    image: cockroachdb/cockroach:v22.2.8
    volumes:
      - ./certs:/cockroach/certs:ro
    networks:
      - betterdiscord
    depends_on:
      cockroachdb:
        condition: service_healthy
    command: >
      sql --certs-dir=/cockroach/certs --host=cockroachdb:26257 
      --execute="CREATE DATABASE IF NOT EXISTS chat_app_dev;"
    restart: "no"

  backend:
    container_name: backend
    build:
      context: ./backend/chat_app
      args:
        - BUILDKIT_INLINE_CACHE=1
    environment:
      DATABASE_URL: "postgresql://root@cockroachdb:26257/chat_app_dev?sslmode=require&sslrootcert=/app/priv/certs/ca.crt&sslcert=/app/priv/certs/client.root.crt&sslkey=/app/priv/certs/client.root.key"
      GOOGLE_CLIENT_ID: "58516048770-lqsao96iscal7fb850pgmre3cmhpvm6q.apps.googleusercontent.com"
      GOOGLE_CLIENT_SECRET: "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"
      MIX_ENV: "dev"
      PHX_HOST: "0.0.0.0"
    ports:
      - "4000:4000"
    volumes:
      - ./backend/chat_app:/app
      - backend_deps:/app/deps
      - backend_build:/app/_build
      - ./certs:/app/priv/certs:ro
    networks:
      - betterdiscord
    depends_on:
      db-init:
        condition: service_completed_successfully
      cockroachdb:
        condition: service_healthy
    restart: unless-stopped

  betterdiscord-coturn:
    container_name: betterdiscord-coturn
    image: instrumentisto/coturn:4.5.2
    ports:
      - "3478:3478/tcp"
      - "3478:3478/udp"
      - "50000-51000:50000-51000/udp"
    volumes:
      - ./backend/chat_app/secrets/turnserver.conf:/etc/coturn/turnserver.conf:ro
    command: >
      turnserver -c /etc/coturn/turnserver.conf --log-file=stdout --no-tls --no-dtls --cli-password=123456
    networks:
      betterdiscord:
        aliases:
          - coturn
    restart: unless-stopped

  mediasoup-server:
    container_name: mediasoup-server
    build:
      context: ./mediasoup-server
      dockerfile: Dockerfile
    working_dir: /app
    volumes:
      - ./mediasoup-server:/app
      - mediasoup_modules:/app/node_modules
    command: sh -c "yarn install && yarn start"
    ports:
      - "3001:3001"
      - "40000-40100:40000-40100/udp"
    networks:
      - betterdiscord
    restart: unless-stopped

  minio:
    container_name: minio
    image: minio/minio:RELEASE.2025-04-22T22-12-26Z
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password123
    volumes:
      - minio-data:/data
    networks:
      - betterdiscord
    restart: unless-stopped

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
      args:
        - BUILDKIT_INLINE_CACHE=1
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: yarn dev
    networks:
      - betterdiscord
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  cockroach-data:
  backend_deps:
  backend_build:
  mediasoup_modules:
  minio-data:

networks:
  betterdiscord:
    driver: bridge