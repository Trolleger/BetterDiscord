version: '3.8'

services:
  cockroachdb:
    container_name: cockroachdb
    image: cockroachdb/cockroach:v22.2.8
    command: >
      start-single-node
      --certs-dir=/cockroach/certs
      --listen-addr=localhost:26257
      --advertise-addr=cockroachdb:26257
      --http-addr=localhost:8080
      --accept-sql-without-tls
      --host=0.0.0.0
    volumes:
      - ./certs:/cockroach/certs:ro
      - cockroach-data:/cockroach/cockroach-data
    ports:
      - "127.0.0.1:26257:26257"
      - "127.0.0.1:8080:8080"
    networks:
      betterdiscord:
        aliases:
          - cockroachdb
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health?ready=1"]
      interval: 10s
      timeout: 5s
      retries: 15
      start_period: 90s
    restart: unless-stopped

  db-init:
    container_name: db-init
    image: cockroachdb/cockroach:v22.2.8
    volumes:
      - ./certs:/cockroach/certs:ro
    networks:
      - betterdiscord
    depends_on:
      cockroachdb:
        condition: service_healthy
    command: >
      sql --certs-dir=/cockroach/certs --host=cockroachdb:26257 
      --execute="CREATE DATABASE IF NOT EXISTS chat_app_dev;"
    restart: "no"

  backend:
    container_name: backend
    build:
      context: ./backend
      args:
        - BUILDKIT_INLINE_CACHE=1
    env_file:
      - ./env/.env
    environment:
      MIX_ENV: "dev"
      PHX_HOST: "0.0.0.0"
      ERL_FLAGS: "+fnu"
      MEDIASOUP_WS_URL: "ws://mediasoup-server:3000"
    ports:
      - "127.0.0.1:4000:4000"
    volumes:
      - ./backend:/app:delegated
      - backend_deps:/app/deps
      - backend_build:/app/_build
      - backend_tmp:/app/tmp
      - ./certs:/certs:ro
    networks:
      - betterdiscord
    depends_on:
      db-init:
        condition: service_completed_successfully
      cockroachdb:
        condition: service_healthy
    restart: unless-stopped

  betterdiscord-coturn:
    container_name: betterdiscord-coturn
    image: instrumentisto/coturn:4.5.2
    ports:
      - "127.0.0.1:3478:3478/tcp"
      - "127.0.0.1:3478:3478/udp"
      - "127.0.0.1:60000-60200:60000-60200/udp"
    volumes:
      - ./backend/secrets/turnserver.conf:/etc/coturn/turnserver.conf:ro
    command: >
      turnserver -c /etc/coturn/turnserver.conf --log-file=stdout
    networks:
      betterdiscord:
        aliases:
          - coturn
    restart: unless-stopped

  mediasoup-server:
    container_name: mediasoup-server
    build:
      context: ./mediasoup-server
    environment:
      - MEDIASOUP_LISTEN_IP=0.0.0.0
      - MEDIASOUP_ANNOUNCED_IP=127.0.0.1
      - NODE_ENV=development
    ports:
      - "127.0.0.1:3000:3000/tcp"
      - "127.0.0.1:40000-40100:40000-40100/udp"
    volumes:
      - ./mediasoup-server:/app
      - mediasoup_modules:/app/node_modules
    command: sh -c "yarn install && node server.js"
    networks:
      - betterdiscord
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: unless-stopped

  minio:
    container_name: minio
    image: minio/minio:RELEASE.2025-04-22T22-12-26Z
    command: server /data --console-address ":9001"
    ports:
      - "127.0.0.1:9000:9000"
      - "127.0.0.1:9001:9001"
    env_file:
      - ./env/.env.minio
    volumes:
      - minio-data:/data
    networks:
      - betterdiscord
    restart: unless-stopped

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
      args:
        - BUILDKIT_INLINE_CACHE=1
    environment:
      - VITE_MEDIASOUP_WS_URL=ws://127.0.0.1:3000
    ports:
      - "127.0.0.1:3001:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: yarn dev
    networks:
      - betterdiscord
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  cockroach-data:
  backend_deps:
  backend_build:
  backend_tmp:
  mediasoup_modules:
  minio-data:

networks:
  betterdiscord:
    driver: bridge