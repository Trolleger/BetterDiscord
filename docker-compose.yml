services:
  postgres:
      build:
        context: ./postgres             # Custom Postgres image with TLS certs baked in
        dockerfile: Dockerfile.postgres
      container_name: postgres
      env_file:
        - ./postgres/.env               # Postgres-only credentials, kept isolated
      volumes:
        - pgdata:/var/lib/postgresql/data
      ports:
        - "5432:5432"
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
        interval: 10s
        timeout: 5s
        retries: 5
      restart: unless-stopped
      networks:
        - betterdiscord
      
  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
      args:
        - BUILDKIT_INLINE_CACHE=1
        - USER_ID=${USER_ID:-1000}
        - GROUP_ID=${GROUP_ID:-1000}
    env_file:
      - ./env/.env            # General env
      - ./backend/.env        # Backend specific env, including POSTGRES vars
    environment:
      MIX_ENV: "dev"
      PHX_HOST: "0.0.0.0"
    ports:
      - "127.0.0.1:4000:4000"
    volumes:
      - ./backend:/app:delegated
      - backend_deps:/app/deps
      - backend_build:/app/_build
      - ./backend/dev_certs:/dev_certs
    networks:
      - betterdiscord
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # mediasoup-server:
  #   container_name: mediasoup-server
  #   build:
  #     context: ./mediasoup-server
  #   environment:
  #     - MEDIASOUP_LISTEN_IP=0.0.0.0
  #     - MEDIASOUP_ANNOUNCED_IP=host.docker.internal
  #     - NODE_ENV=development
  #   ports:
  #     - "127.0.0.1:3100:3000/tcp"
  #     - "127.0.0.1:40000-40100:40000-40100/udp"
  #   volumes:
  #     - ./mediasoup-server:/app
  #     - mediasoup_modules:/app/node_modules
  #   command: sh -c "yarn install && node server.js"
  #   networks:
  #     - betterdiscord
  #   extra_hosts:
  #     - "host.docker.internal:host-gateway"
  #   restart: unless-stopped

  # minio:
  #   container_name: minio
  #   image: minio/minio:RELEASE.2025-04-22T22-12-26Z
  #   command: server /data --console-address ":9001"
  #   ports:
  #     - "127.0.0.1:9000:9000"
  #     - "127.0.0.1:9001:9001"
  #   env_file:
  #     - ./env/.env.minio
  #   volumes:
  #     - minio-data:/data
  #   networks:
  #     - betterdiscord
  #   restart: unless-stopped

  betterdiscord-coturn:
    container_name: betterdiscord-coturn
    image: instrumentisto/coturn:4.5.2
    ports:
      - "3478:3478/tcp"
      - "3478:3478/udp"
      - "55000-55200:55000-55200/udp"
    volumes:
      - ./backend/secrets/turnserver.conf:/etc/coturn/turnserver.conf:ro
      - ./backend/secrets/turn_server_cert.pem:/certs/turn_server_cert.pem:ro
      - ./backend/secrets/turn_server_pkey.pem:/certs/turn_server_pkey.pem:ro
    command: >
      turnserver -c /etc/coturn/turnserver.conf --log-file=stdout
    networks:
      betterdiscord:
        aliases:
          - coturn
    restart: unless-stopped

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
      args:
        - BUILDKIT_INLINE_CACHE=1
    environment:
      - VITE_MEDIASOUP_WS_URL=ws://host.docker.internal:3000
    ports:
      - "127.0.0.1:3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: yarn dev
    networks:
      - betterdiscord
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  pgdata:
  backend_deps:
  backend_build:

networks:
  betterdiscord:
    driver: bridge
