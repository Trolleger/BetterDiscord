version: '3.8'

services:
  cockroachdb:
    image: cockroachdb/cockroach:v24.3.14
    container_name: cockroachdb
    command:
      - start-single-node
      - --certs-dir=/cockroach/certs
      - --advertise-addr=localhost
      - --http-addr=0.0.0.0:8080
      - --listen-addr=127.0.0.1:26257
    environment:
      - TZ=UTC
    volumes:
      - ./certs:/cockroach/certs:ro
      - cockroach-data:/cockroach/cockroach-data
    ports:
      - "26257:26257"
      - "8080:8080"
    networks:
      betterdiscord:
        aliases:
          - cockroachdb
    healthcheck:
      test: ["CMD", "curl", "-f", "--cacert", "/cockroach/certs/ca.crt", "https://127.0.0.1:8080/health?ready=1"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 30s
    restart: unless-stopped

  db-init:
    container_name: db-init
    image: cockroachdb/cockroach:v24.3.14
    depends_on:
      cockroachdb:
        condition: service_healthy
    command:
      - "bash"
      - "-c"
      - |
        echo "Waiting for CockroachDB to be ready..."
        for i in {1..30}; do
          if ./cockroach sql \
            --certs-dir=/cockroach/certs \
            --host=cockroachdb:26257 \
            -e "SELECT 1;" &>/dev/null; then
            echo "Creating database and users..."
            ./cockroach sql \
              --certs-dir=/cockroach/certs \
              --host=cockroachdb:26257 \
              -e "
              CREATE DATABASE IF NOT EXISTS defaultdb;
              CREATE USER IF NOT EXISTS root;
              CREATE USER IF NOT EXISTS craig WITH PASSWORD 'cockroach12938';
              GRANT ALL ON DATABASE defaultdb TO root;
              GRANT ALL ON DATABASE defaultdb TO craig;
              GRANT ADMIN TO craig;
            "
            echo "Database setup complete."
            exit 0
          fi
          sleep 2
        done
        echo "Failed to connect to CockroachDB after 60 seconds"
        exit 1
    volumes:
      - ./certs:/cockroach/certs:ro
    networks:
      - betterdiscord
    restart: "no"

  backend:
    container_name: backend
    build:
      context: ./backend
      args:
        - BUILDKIT_INLINE_CACHE=1
    env_file:
      - ./env/.env
    environment:
      MIX_ENV: "dev"
      PHX_HOST: "0.0.0.0"
      ERL_FLAGS: "+fnu"
      MEDIASOUP_WS_URL: "ws://mediasoup-server:3000"
      DATABASE_URL: "postgres://root@cockroachdb:26257/defaultdb?sslmode=verify-full&sslcert=/certs/client.root.crt&sslkey=/certs/client.root.key&sslrootcert=/certs/ca.crt"
    ports:
      - "127.0.0.1:4000:4000"
    volumes:
      - ./backend:/app:delegated
      - backend_deps:/app/deps
      - backend_build:/app/_build
      - backend_tmp:/app/tmp
      - ./certs:/certs:ro
    networks:
      - betterdiscord
    depends_on:
      db-init:
        condition: service_completed_successfully
      cockroachdb:
        condition: service_healthy
    restart: unless-stopped

  betterdiscord-coturn:
    container_name: betterdiscord-coturn
    image: instrumentisto/coturn:4.5.2
    ports:
      - "127.0.0.1:3478:3478/tcp"
      - "127.0.0.1:3478:3478/udp"
      - "127.0.0.1:60000-60200:60000-60200/udp"
    volumes:
      - ./backend/secrets/turnserver.conf:/etc/coturn/turnserver.conf:ro
    command: >
      turnserver -c /etc/coturn/turnserver.conf --log-file=stdout
    networks:
      betterdiscord:
        aliases:
          - coturn
    restart: unless-stopped

  mediasoup-server:
    container_name: mediasoup-server
    build:
      context: ./mediasoup-server
    environment:
      - MEDIASOUP_LISTEN_IP=0.0.0.0
      - MEDIASOUP_ANNOUNCED_IP=host.docker.internal
      - NODE_ENV=development
    ports:
      - "127.0.0.1:3000:3000/tcp"
      - "127.0.0.1:40000-40100:40000-40100/udp"
    volumes:
      - ./mediasoup-server:/app
      - mediasoup_modules:/app/node_modules
    command: sh -c "yarn install && node server.js"
    networks:
      - betterdiscord
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: unless-stopped

  minio:
    container_name: minio
    image: minio/minio:RELEASE.2025-04-22T22-12-26Z
    command: server /data --console-address ":9001"
    ports:
      - "127.0.0.1:9000:9000"
      - "127.0.0.1:9001:9001"
    env_file:
      - ./env/.env.minio
    volumes:
      - minio-data:/data
    networks:
      - betterdiscord
    restart: unless-stopped

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
      args:
        - BUILDKIT_INLINE_CACHE=1
    environment:
      - VITE_MEDIASOUP_WS_URL=ws://host.docker.internal:3000
    ports:
      - "127.0.0.1:3001:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: yarn dev
    networks:
      - betterdiscord
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  cockroach-data:
  backend_deps:
  backend_build:
  backend_tmp:
  mediasoup_modules:
  minio-data:

networks:
  betterdiscord:
    driver: bridge